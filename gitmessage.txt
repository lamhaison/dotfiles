[Action] - try to keep under 50 characters

# Keep the message short and to the point.
# Use the imperative mood (e.g. "Fix bug" instead of "Fixed bug").  It is used to give commands, make requests, or give instructions.
# Use the first line as a summary and the following lines as a more detailed description if needed.
# Reference any relevant issues or pull requests.

# For ex:
# [Add] - Your add description
# [Improvement] - for enhancements
# [Update] - Your update description
# [Remove] - remove somethings such as functions, temp file, ...
# [Feat] – a new feature is introduced with the changes
# [Fix] - a bug fix has occurred
# [Chore] – for updating dependencies
# [Refactor] - refactored code that neither fixes a bug nor adds a feature
# [Docs] - updates to documentation such as a the README or other markdown files
# [Style] - related to code formatting such as white-space, missing semi-colons, and so on
# [Test] - including new or correcting previous tests
# [Perf] – performance improvements
# [CiCd] - continuous integration and continuous delivery related
# [Build] – changes that affect the build system or external dependencies
# [Revert] - reverts a previous commit
# [Release] - Your Release description (Comment for the PR)

# Multi-line description of commit, feel free to be detailed. (the body should be restricted to 72 characters)

#Further paragraphs come after blank lines.
# - Bullet points are okay, too
# - Typically a hyphen or asterisk is used for the bullet, preceded by a single space, with blank lines in between, but conventions vary here


# BREAKING CHANGE:  to note the reason for a breaking change within the commit

# [Ticket: X]